<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="collections">
	<resultMap id="BaseResultMap" type="collections">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="job_id" property="jobId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<!-- sql语句，调用now函数 -->
	<sql id="insert">
		insert into collection (id, user_id, job_id,
		create_time, update_time)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{jobId,jdbcType=INTEGER},
		now(),now())

	</sql>
	<!-- 查询数据 -->
	<select id="query" parameterType="collections" resultMap="BaseResultMap">
		select *
		from collection
		WHERE 1=1
		<if test="userId != null">
			and user_id = #{userId,jdbcType=INTEGER}
		</if>
		<if test="jobId != null">
			and job_id = #{jobId,jdbcType=INTEGER}
		</if>


	</select>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, user_id, job_id, create_time, update_time
	</sql>
	<!-- 主键查询数据 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="collections">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from collection
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="collection">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from collection
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<!--插入数据，调用sql函数 -->
	<insert id="insert" parameterType="collections">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<include refid="insert" />
	</insert>
	<insert id="insertSelective" parameterType="collections">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into collection
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="jobId != null">
				job_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="jobId != null">
				#{jobId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<!-- 根据主键进行更新，部分更新 -->
	<update id="updateByPrimaryKeySelective" parameterType="collections">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update collection
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="jobId != null">
				job_id = #{jobId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 根据主键进行更新，全部更新 -->
	<update id="updateByPrimaryKey" parameterType="collections">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update collection
		set user_id = #{userId,jdbcType=INTEGER},
		job_id = #{jobId,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 查詢数量 -->
	<select id="selectCount" parameterType="collections" resultType="Integer">
		SELECT count(*)
		FROM collection
		WHERE 1=1
		<if test="userId != null">
			user_id = #{userId,jdbcType=INTEGER},
		</if>
		<if test="jobId != null">
			job_id = #{jobId,jdbcType=INTEGER},
		</if>
		<if test="createTime != null">
			create_time = #{createTime,jdbcType=TIMESTAMP},
		</if>
		<if test="updateTime != null">
			update_time = #{updateTime,jdbcType=TIMESTAMP},
		</if>
	</select>
	<!-- 分页查詢 -->
	<select id="select" parameterType="Map" resultMap="BaseResultMap">
		SELECT *
		FROM collection
		WHERE 1=1
		<if test="userId != null">
			user_id = #{userId,jdbcType=INTEGER},
		</if>
		<if test="jobId != null">
			job_id = #{jobId,jdbcType=INTEGER},
		</if>
		<if test="createTime != null">
			create_time = #{createTime,jdbcType=TIMESTAMP},
		</if>
		<if test="updateTime != null">
			update_time = #{updateTime,jdbcType=TIMESTAMP},
		</if>
		<if test="start != null and pageSize!=null">
			limit #{start},#{pageSize}
		</if>
	</select>
</mapper>